//  env("DATABASE_URL")
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./openTube.db"
}

// enum VideoType {
//   scan
//   link
//   saved
// }

model VideoType {
  id          Int     @id @default(autoincrement())
  typeName    String
  description String
  Video       Video[]
}

model Video {
  id            Int               @id @default(autoincrement())
  path          String
  thumbnailBlob Bytes
  comments      Comment[]
  createdDTTM   DateTime
  playlists     VideoOnPlaylist[]
  type          VideoType         @relation(fields: [videoTypeId], references: [id])
  videoTypeId   Int
  length        Int               @default(0)
  VideoHistory  VideoHistory[]
}

model Comment {
  id          Int      @id @default(autoincrement())
  author      String
  content     String
  createdDTTM DateTime
  video       Video    @relation(fields: [videoId], references: [id])
  videoId     Int
}

model Playlist {
  id          Int               @id @default(autoincrement())
  name        String
  videos      VideoOnPlaylist[]
  createdDTTM DateTime
  Setting     Setting[]
}

model VideoOnPlaylist {
  id         Int      @id @default(autoincrement())
  video      Video    @relation(fields: [videoId], references: [id])
  videoId    Int
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  playlistId Int
  entryName  String?
  timestamp  String?
  orderIndex Float
}

model Setting {
  id                         Int       @id @default(autoincrement())
  crawlPath                  String?
  recentAddedVideoPlaylist   Playlist? @relation(fields: [recentAddedVideoPlaylistId], references: [id], onDelete: Cascade)
  recentAddedVideoPlaylistId Int?
}

model VideoHistory {
  id      Int   @id @default(autoincrement())
  video   Video @relation(fields: [videoId], references: [id])
  videoId Int
}